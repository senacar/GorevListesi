<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>